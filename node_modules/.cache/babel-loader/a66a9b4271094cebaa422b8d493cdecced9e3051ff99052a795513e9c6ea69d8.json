{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dussa\\\\MOTHERSON\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Projects from \"./components/Projects\";\nimport ProjectContext from \"./context/ProjectContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [projectsList, setProjectsList] = useState([{\n    id: 1,\n    projectName: \"Project Name\",\n    projectDescription: \"I created this personal project in order to show how to create an interface in Figma using a portfolio as an example.\",\n    ProjectLink: \"Project Link\",\n    ProjectImg: \"https://iili.io/J54fEXa.png\"\n  }, {\n    id: 2,\n    projectName: \"Project Name\",\n    projectDescription: \"What was your role, your deliverables, if the project was personal, freelancing.\",\n    ProjectLink: \"Project Link\",\n    ProjectImg: \"https://iili.io/J54fOmX.png\"\n  }, {\n    id: 3,\n    projectName: \"Project Name\",\n    projectDescription: \"You can also add in this description the type of the project, if it was for web, mobile, electron.\",\n    ProjectLink: \"Project Link\",\n    ProjectImg: \"https://iili.io/J54fUBf.png\"\n  }]);\n  const addproject = project => {\n    setProjectsList([...projectsList, project]);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n        value: {\n          projectsList,\n          addproject\n        },\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/projects\",\n            component: Projects\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3FFC3C+gVSVvjwvbuYdLa308PW4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Routes","Route","BrowserRouter","About","Projects","ProjectContext","jsxDEV","_jsxDEV","App","_s","projectsList","setProjectsList","id","projectName","projectDescription","ProjectLink","ProjectImg","addproject","project","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","exact","path","component","_c","$RefreshReg$"],"sources":["C:/Users/dussa/MOTHERSON/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\nimport About from \"./components/About\";\n\nimport Projects from \"./components/Projects\";\nimport ProjectContext from \"./context/ProjectContext\";\n\nfunction App() {\n  const [projectsList, setProjectsList] = useState([\n    {\n      id: 1,\n      projectName: \"Project Name\",\n      projectDescription:\n        \"I created this personal project in order to show how to create an interface in Figma using a portfolio as an example.\",\n      ProjectLink: \"Project Link\",\n      ProjectImg: \"https://iili.io/J54fEXa.png\",\n    },\n    {\n      id: 2,\n      projectName: \"Project Name\",\n      projectDescription:\n        \"What was your role, your deliverables, if the project was personal, freelancing.\",\n      ProjectLink: \"Project Link\",\n      ProjectImg: \"https://iili.io/J54fOmX.png\",\n    },\n    {\n      id: 3,\n      projectName: \"Project Name\",\n      projectDescription:\n        \"You can also add in this description the type of the project, if it was for web, mobile, electron.\",\n      ProjectLink: \"Project Link\",\n      ProjectImg: \"https://iili.io/J54fUBf.png\",\n    },\n  ]);\n\n  const addproject = (project) => {\n    setProjectsList([...projectsList, project]);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <h1>All</h1>\n        <ProjectContext.Provider value={{ projectsList, addproject }}>\n          <Routes>\n            <Route exact path=\"/\" component={About} />\n            <Route exact path=\"/projects\" component={Projects} />\n          </Routes>\n        </ProjectContext.Provider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,KAAK,EAAEC,aAAa,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,cAAc,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAC/C;IACEa,EAAE,EAAE,CAAC;IACLC,WAAW,EAAE,cAAc;IAC3BC,kBAAkB,EAChB,uHAAuH;IACzHC,WAAW,EAAE,cAAc;IAC3BC,UAAU,EAAE;EACd,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,WAAW,EAAE,cAAc;IAC3BC,kBAAkB,EAChB,kFAAkF;IACpFC,WAAW,EAAE,cAAc;IAC3BC,UAAU,EAAE;EACd,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,WAAW,EAAE,cAAc;IAC3BC,kBAAkB,EAChB,oGAAoG;IACtGC,WAAW,EAAE,cAAc;IAC3BC,UAAU,EAAE;EACd,CAAC,CACF,CAAC;EAEF,MAAMC,UAAU,GAAIC,OAAO,IAAK;IAC9BP,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEQ,OAAO,CAAC,CAAC;EAC7C,CAAC;EAED,oBACEX,OAAA,CAACL,aAAa;IAAAiB,QAAA,eACZZ,OAAA;MAAKa,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBZ,OAAA;QAAAY,QAAA,EAAI;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACZjB,OAAA,CAACF,cAAc,CAACoB,QAAQ;QAACC,KAAK,EAAE;UAAEhB,YAAY;UAAEO;QAAW,CAAE;QAAAE,QAAA,eAC3DZ,OAAA,CAACP,MAAM;UAAAmB,QAAA,gBACLZ,OAAA,CAACN,KAAK;YAAC0B,KAAK;YAACC,IAAI,EAAC,GAAG;YAACC,SAAS,EAAE1B;UAAM;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1CjB,OAAA,CAACN,KAAK;YAAC0B,KAAK;YAACC,IAAI,EAAC,WAAW;YAACC,SAAS,EAAEzB;UAAS;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAACf,EAAA,CA7CQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}